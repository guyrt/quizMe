# slim for faster builds
FROM python:3.11.7-slim

# install the basic system deps we need
RUN apt-get update && apt-get install -y gnupg2 curl build-essential unixodbc-dev zip git
#set the shell
SHELL ["/bin/bash", "-c"]
# install pipx to make sure command line utils don't step on our project deps
RUN python3 -m pip install pipx
RUN source ~/.bashrc
RUN pipx ensurepath
RUN echo 'export PATH=$(python3 -m site --user-base)/bin:$PATH' >> ~/.bashrc
# use pipx to install poetry, ensures poetry deps don't conflict with deployed code
RUN PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin pipx install poetry
# expose the poetry command
RUN echo 'export PATH="$HOME/.poetry/bin:$PATH"' >> ~/.bashrc
RUN source ~/.bashrc
# not essential but matches a good patern for local dev
RUN poetry config virtualenvs.in-project true

WORKDIR /app
# add the two poetry env files we care about
COPY pyproject.toml poetry.lock ./
# copy the project files
COPY webserve ./
# install deps

RUN poetry install

RUN apt-get purge -y gnupg2 curl build-essential unixodbc-dev zip git

COPY webserve ./

EXPOSE 8000

# expose debugging port and set up command for running the application with PyCharm
EXPOSE 5678
CMD ["python", "-m", "debugpy.server", "--listen=0.0.0.0:5678"]